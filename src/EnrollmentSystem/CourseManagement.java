/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package EnrollmentSystem;

import static EnrollmentSystem.StudentEnrollment.theQuery;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Connection;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author elli
 */
public class CourseManagement extends javax.swing.JFrame {
    /**
     * Creates new form CourseManagement
     */
    public CourseManagement() {
        initComponents();
        updateComboBox(jComboBoxCourse, "SELECT Course_ID FROM Courses", "Course_ID");
        updateComboBox(jComboBoxCourseSub, "SELECT Course_ID FROM Courses", "Course_ID");

        updateTableCourse();
        updateTableSections();
        updateTableSubjects();
        this.setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE);
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                int choose = JOptionPane.showConfirmDialog(null,
                        "Are you sure you want to exit the application ?",
                        "Confirm Close", JOptionPane.YES_NO_OPTION,
                        JOptionPane.INFORMATION_MESSAGE);
                if (choose == JOptionPane.YES_OPTION) {
                    e.getWindow().dispose();
                    System.exit(0);

                } else {
                    System.out.println("Easter Egg: Hello!");
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButtonBackBtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel4 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBoxCourse = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jComboBoxYrLevel = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldAddSec = new javax.swing.JTextField();
        jButtonAddSec = new javax.swing.JButton();
        jButtonDeleteSec = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTableSection = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jTextFieldSubID = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jTextFieldSubName = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jComboBoxSubType = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jComboBoxCourseSub = new javax.swing.JComboBox<>();
        jButtonAddSub = new javax.swing.JButton();
        jButtonDeleteSub = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableSubjects = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jTextFieldCourseName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButtonAddCourse = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCourse = new javax.swing.JTable();
        jTextFieldCourseID = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jButtonDeleteCourse = new javax.swing.JButton();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 0, 51));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("AND SECTIONS");

        jButton1.setBackground(new java.awt.Color(204, 204, 204));
        jButton1.setForeground(new java.awt.Color(0, 0, 0));
        jButton1.setText("COURSES");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("COURSES");

        jButton3.setBackground(new java.awt.Color(204, 204, 204));
        jButton3.setForeground(new java.awt.Color(0, 0, 0));
        jButton3.setText("SECTION");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButtonBackBtn.setBackground(new java.awt.Color(204, 204, 204));
        jButtonBackBtn.setForeground(new java.awt.Color(0, 0, 0));
        jButtonBackBtn.setText("BACK");
        jButtonBackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonBackBtnActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(204, 204, 204));
        jButton2.setForeground(new java.awt.Color(0, 0, 0));
        jButton2.setText("SUBJECTS");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(60, 60, 60)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jButtonBackBtn)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton2, jButton3});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addGap(74, 74, 74)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(113, 113, 113)
                .addComponent(jButtonBackBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton2, jButton3});

        jTabbedPane1.setBackground(new java.awt.Color(204, 204, 204));
        jTabbedPane1.setForeground(new java.awt.Color(0, 0, 0));

        jPanel4.setBackground(new java.awt.Color(204, 204, 204));

        jPanel3.setBackground(new java.awt.Color(153, 153, 153));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("ADD SECTION");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 0));
        jLabel8.setText("Select Course");

        jComboBoxCourse.setBackground(new java.awt.Color(255, 255, 255));
        jComboBoxCourse.setForeground(new java.awt.Color(0, 0, 0));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 0));
        jLabel9.setText("Select Year Level");

        jComboBoxYrLevel.setBackground(new java.awt.Color(255, 255, 255));
        jComboBoxYrLevel.setForeground(new java.awt.Color(0, 0, 0));
        jComboBoxYrLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 0));
        jLabel10.setText("Add Section");

        jTextFieldAddSec.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldAddSec.setForeground(new java.awt.Color(0, 0, 0));

        jButtonAddSec.setBackground(new java.awt.Color(0, 153, 0));
        jButtonAddSec.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAddSec.setText("ADD SECTION");
        jButtonAddSec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddSecActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButtonAddSec)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jComboBoxYrLevel, 0, 134, Short.MAX_VALUE)
                    .addComponent(jComboBoxCourse, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldAddSec))
                .addContainerGap(55, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jComboBoxYrLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldAddSec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonAddSec, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(33, Short.MAX_VALUE))
        );

        jButtonDeleteSec.setBackground(new java.awt.Color(204, 0, 0));
        jButtonDeleteSec.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDeleteSec.setText("DELETE SECTION");
        jButtonDeleteSec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteSecActionPerformed(evt);
            }
        });

        jScrollPane4.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane4.setForeground(new java.awt.Color(0, 0, 0));

        jTableSection.setBackground(new java.awt.Color(255, 255, 255));
        jTableSection.setForeground(new java.awt.Color(0, 0, 0));
        jTableSection.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(jTableSection);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("MANAGE SECTIONS");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 383, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonDeleteSec, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(70, 77, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonDeleteSec, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(244, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("SECTION", jPanel4);

        jPanel6.setBackground(new java.awt.Color(204, 204, 204));

        jPanel7.setBackground(new java.awt.Color(153, 153, 153));

        jLabel13.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 0, 0));
        jLabel13.setText("ADD SUBJECT");

        jTextFieldSubID.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldSubID.setForeground(new java.awt.Color(0, 0, 0));

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(0, 0, 0));
        jLabel14.setText("Subject ID");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 0, 0));
        jLabel16.setText("Subject Name");

        jTextFieldSubName.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldSubName.setForeground(new java.awt.Color(0, 0, 0));

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(0, 0, 0));
        jLabel17.setText("Subject Type");

        jComboBoxSubType.setBackground(new java.awt.Color(255, 255, 255));
        jComboBoxSubType.setForeground(new java.awt.Color(0, 0, 0));
        jComboBoxSubType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Major", "Minor" }));

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(0, 0, 0));
        jLabel18.setText("Course");

        jComboBoxCourseSub.setBackground(new java.awt.Color(255, 255, 255));
        jComboBoxCourseSub.setForeground(new java.awt.Color(0, 0, 0));
        jComboBoxCourseSub.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jComboBoxCourseSubMouseClicked(evt);
            }
        });

        jButtonAddSub.setBackground(new java.awt.Color(0, 153, 0));
        jButtonAddSub.setForeground(new java.awt.Color(0, 0, 0));
        jButtonAddSub.setText("ADD SUBJECT");
        jButtonAddSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddSubActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAddSub)
                    .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTextFieldSubName)
                        .addComponent(jLabel14)
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                        .addComponent(jTextFieldSubID)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jComboBoxSubType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBoxCourseSub, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel13)
                .addGap(33, 33, 33)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldSubID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldSubName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel17)
                .addGap(18, 18, 18)
                .addComponent(jComboBoxSubType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jComboBoxCourseSub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonAddSub, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        jButtonDeleteSub.setBackground(new java.awt.Color(204, 0, 0));
        jButtonDeleteSub.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDeleteSub.setText("DELETE SUBJECT");
        jButtonDeleteSub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteSubActionPerformed(evt);
            }
        });

        jScrollPane6.setBackground(new java.awt.Color(204, 204, 204));
        jScrollPane6.setForeground(new java.awt.Color(204, 204, 204));

        jTableSubjects.setBackground(new java.awt.Color(255, 255, 255));
        jTableSubjects.setForeground(new java.awt.Color(0, 0, 0));
        jTableSubjects.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane6.setViewportView(jTableSubjects);

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 0, 0));
        jLabel6.setText("MANAGE SUBJECTS");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jButtonDeleteSub)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jButtonDeleteSub, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(130, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("SUBJECTS", jPanel6);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("MANAGE COURSES");

        jTextFieldCourseName.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldCourseName.setForeground(new java.awt.Color(0, 0, 0));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Add a Course");

        jButtonAddCourse.setBackground(new java.awt.Color(78, 195, 82));
        jButtonAddCourse.setForeground(new java.awt.Color(0, 0, 0));
        jButtonAddCourse.setText("ADD COURSE");
        jButtonAddCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddCourseActionPerformed(evt);
            }
        });

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setForeground(new java.awt.Color(0, 0, 0));

        jTableCourse.setBackground(new java.awt.Color(255, 255, 255));
        jTableCourse.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTableCourse);

        jTextFieldCourseID.setBackground(new java.awt.Color(255, 255, 255));
        jTextFieldCourseID.setForeground(new java.awt.Color(0, 0, 0));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 0, 0));
        jLabel15.setText("Course Code");

        jButtonDeleteCourse.setBackground(new java.awt.Color(204, 0, 0));
        jButtonDeleteCourse.setForeground(new java.awt.Color(255, 255, 255));
        jButtonDeleteCourse.setText("DELETE COURSE");
        jButtonDeleteCourse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteCourseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButtonAddCourse)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel15)
                                .addComponent(jTextFieldCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButtonDeleteCourse))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jTextFieldCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(0, 0, Short.MAX_VALUE))))
                .addContainerGap(136, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jTextFieldCourseName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel15))
                    .addComponent(jButtonDeleteCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextFieldCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonAddCourse, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(186, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("COURSES", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButtonBackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonBackBtnActionPerformed
        this.dispose();
        new Home().setVisible(true);
    }//GEN-LAST:event_jButtonBackBtnActionPerformed

    private void jButtonAddCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddCourseActionPerformed
        String courseID = jTextFieldCourseID.getText();
        String courseName = jTextFieldCourseName.getText();
        String checkQuery = "SELECT * FROM Courses WHERE Course_ID = ?";

        if (courseID.isEmpty() || courseName.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter course to be added.", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                Connection con = DBConnection.getConnection();
                PreparedStatement ps = con.prepareStatement(checkQuery);
                ps.setString(1, courseID);
                ResultSet rs = ps.executeQuery();
                if (rs.next()) {
                    JOptionPane.showMessageDialog(null, "Course already exists.");
                } else {
                    try {
                        int choose = JOptionPane.showConfirmDialog(null, "Add " + courseName + "(" + courseID + ") to database?", "Confirm", JOptionPane.YES_NO_OPTION,
                                JOptionPane.INFORMATION_MESSAGE);
                        if (choose == JOptionPane.YES_OPTION) {
                            theQuery("INSERT INTO Courses(Course_ID, Course_Name) VALUES('" + courseID + "' , '" + courseName + "');");
                            JOptionPane.showMessageDialog(null, "Successfully added.");
                            updateTableCourse();
                            updateComboBox(jComboBoxCourse, "SELECT Course_ID FROM Courses", "Course_ID");
                            jTextFieldCourseID.setText("");
                            jTextFieldCourseName.setText("");
                        }
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, "Check your details.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Check your details.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonAddCourseActionPerformed

    private void jButtonDeleteCourseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteCourseActionPerformed
        try {
            int selectedRow = jTableCourse.getSelectedRow();
            String selectedData = jTableCourse.getModel().getValueAt(selectedRow, 0).toString();

            try {
                Connection con = DBConnection.getConnection();
                PreparedStatement ps = con.prepareStatement("SELECT * FROM Students WHERE Course_ID = '" + selectedData + "';");
                ResultSet rs = ps.executeQuery();
                if (rs.next()) {
                    JOptionPane.showMessageDialog(rootPane, "Cannot delete " + selectedData + " since there are existing students.", "", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    int confirm = JOptionPane.showConfirmDialog(null, "Confirm Delete?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                    if (confirm == JOptionPane.YES_NO_OPTION) {
                        theQuery("DELETE FROM Courses WHERE Course_ID = '" + selectedData + "';");
                        JOptionPane.showMessageDialog(null, "Deleted Successfully");
                        updateTableCourse();
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(rootPane, "Cannot delete " + selectedData + " since there are existing students.", "", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Pls select a course.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonDeleteCourseActionPerformed

    private void jButtonAddSecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddSecActionPerformed
        String section = jTextFieldAddSec.getText();
        String yrLevel = jComboBoxYrLevel.getSelectedItem().toString();
        String checkQuery = "SELECT * FROM Section WHERE Section_Name = ? AND Year_Level = ? AND Course_ID = ?";
        String selectedCourse = jComboBoxCourse.getSelectedItem().toString();

        if (section.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Enter course to be added.", "ERROR", JOptionPane.ERROR_MESSAGE);
        } else {
            try {
                Connection con = DBConnection.getConnection();
                PreparedStatement ps = con.prepareStatement(checkQuery);
                ps.setString(1, section);
                ps.setString(2, yrLevel);
                ps.setString(3, yrLevel);
                ResultSet rs = ps.executeQuery();
                if (rs.next()) {
                    JOptionPane.showMessageDialog(null, "Section already exists.");
                } else {
                    try {
                        theQuery("INSERT INTO Section(Section_Name, Course_ID, Year_Level) VALUES('" + section + "', '" + selectedCourse + "', " + yrLevel + ");");
                        JOptionPane.showMessageDialog(null, "Successfully added.");
                        updateTableSections();
                        updateComboBox(jComboBoxCourse, "SELECT Course_ID FROM Courses", "Course_ID");
                        jTextFieldAddSec.setText("");
                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(null, "Check your details.", "Error", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Check your details.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jButtonAddSecActionPerformed

    private void jButtonDeleteSecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteSecActionPerformed
        try {
            int selectedRow = jTableSection.getSelectedRow();
            String selectedSection = jTableSection.getModel().getValueAt(selectedRow, 0).toString();
            String checkQuery = "SELECT * FROM Students WHERE Section = ?";

            try {
                Connection con = DBConnection.getConnection();
                PreparedStatement ps = con.prepareStatement(checkQuery);
                ps.setString(1, selectedSection);
                ResultSet rs = ps.executeQuery();
                if (rs.next()) {
                    JOptionPane.showMessageDialog(rootPane, "Cannot delete section " + selectedSection + " since there are existing students.", "", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    int confirm = JOptionPane.showConfirmDialog(null, "Confirm Delete?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                    if (confirm == JOptionPane.YES_NO_OPTION) {
                        theQuery("DELETE FROM Section WHERE Section_Name = '" + selectedSection + "';");
                        JOptionPane.showMessageDialog(null, "Deleted Successfully");
                        updateTableSections();
                    }
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Select a section to delete.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Pls select a section to delete.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonDeleteSecActionPerformed

    private void jButtonAddSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddSubActionPerformed
        try {
            String subjectID = jTextFieldSubID.getText();
            String subjectName = jTextFieldSubName.getText();
            String subjectType = jComboBoxSubType.getSelectedItem().toString();
            String course = jComboBoxCourseSub.getSelectedItem().toString();
            String checkQuery = "SELECT * FROM Subjects WHERE Subject_ID = ?";

            if (subjectID.isEmpty() || subjectName.isEmpty() || subjectType.isEmpty() || course.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Pls enter all fields.", "ERROR", JOptionPane.ERROR_MESSAGE);
            } else {
                try {
                    Connection con = DBConnection.getConnection();
                    PreparedStatement ps = con.prepareStatement(checkQuery);
                    ps.setString(1, subjectID);
                    ResultSet rs = ps.executeQuery();
                    if (rs.next()) {
                        JOptionPane.showMessageDialog(null, "Subject already existing.");
                    } else {
                        int confirm = JOptionPane.showConfirmDialog(null, "Add " + subjectName + "(" + subjectID + ") to database?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                        if (confirm == JOptionPane.YES_OPTION) {
                            try {
                                theQuery("INSERT INTO Subjects(Subject_ID, Subject_Name, Subject_Type, Course_ID) "
                                        + "VALUES('" + subjectID + "', '"
                                        + subjectName + "', '"
                                        + subjectType + "', '"
                                        + course + "')"
                                );
                                JOptionPane.showMessageDialog(null, "Added Successfully.");
                                updateTableSubjects();
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, "Error adding due to error.\n" + e, "ERROR", JOptionPane.ERROR_MESSAGE);
                            } finally {
                                jTextFieldSubID.setText("");
                                jTextFieldSubName.setText("");
                                jComboBoxSubType.setSelectedItem(null);
                                jComboBoxCourseSub.setSelectedItem(null);
                            }
                        }
                    }

                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "Error adding due to error.\n" + e, "ERROR", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Pls enter all fields.", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonAddSubActionPerformed

    private void jComboBoxCourseSubMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jComboBoxCourseSubMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxCourseSubMouseClicked

    private void jButtonDeleteSubActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteSubActionPerformed
        try {
            int selectedRow = jTableSubjects.getSelectedRow();
            String selectedData = jTableSubjects.getModel().getValueAt(selectedRow, 0).toString();

            try {
                int confirm = JOptionPane.showConfirmDialog(null, "Confirm Delete?", "Confirm", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE);
                if (confirm == JOptionPane.YES_OPTION) {
                    theQuery("DELETE FROM Subjects WHERE Subject_ID = '" + selectedData + "';");
                    JOptionPane.showMessageDialog(null, "Deleted Successfully");
                    updateTableSubjects();
                }
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "Error: " + ex);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Enter and select subject to delete.", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonDeleteSubActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_jButton2ActionPerformed

    //getting the courses
    static ArrayList<Course> getCourses() {
        ArrayList<Course> courses = new ArrayList<Course>();
        Connection con = DBConnection.getConnection();
        Course c;

        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM Courses");
            while (rs.next()) {
                c = new Course(
                        rs.getString("Course_ID"),
                        rs.getString("Course_Name")
                );
                courses.add(c);
            }
        } catch (SQLException ex) {
            Logger.getLogger(CourseManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
        return courses;
    }

    //gettign the sections
    static ArrayList<Section> getSections() {
        ArrayList<Section> sections = new ArrayList<Section>();
        Connection con = DBConnection.getConnection();
        Section s;

        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM Section");
            while (rs.next()) {
                s = new Section(
                        rs.getString("Section_Name"),
                        rs.getInt("Year_Level"),
                        rs.getString("Course_ID")
                );
                sections.add(s);
            }
        } catch (SQLException ex) {
            Logger.getLogger(CourseManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
        return sections;
    }

    public static ArrayList<Subjects> getSubjects() {
        ArrayList<Subjects> subject = new ArrayList<Subjects>();
        Connection con = DBConnection.getConnection();
        Subjects sj;

        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM Subjects");
            while (rs.next()) {
                sj = new Subjects(
                        rs.getString("Subject_ID"),
                        rs.getString("Subject_Name"),
                        rs.getString("Subject_Type"),
                        rs.getString("Course_ID")
                );
                subject.add(sj);
            }
        } catch (SQLException ex) {
            Logger.getLogger(CourseManagement.class.getName()).log(Level.SEVERE, null, ex);
        }
        return subject;
    }

    private void updateTableCourse() {
        //updates the courses table
        DefaultTableModel tModel = new DefaultTableModel();
        Object[] columnsName = new Object[2];

        columnsName[0] = "Course";
        columnsName[1] = "Course Name";

        tModel.setColumnIdentifiers(columnsName);

        Object[] rowData = new Object[2];

        for (int i = 0; i < getCourses().size(); i++) {
            rowData[0] = getCourses().get(i).getCourseID();
            rowData[1] = getCourses().get(i).getCourseName();

            tModel.addRow(rowData);
        }
        jTableCourse.setModel(tModel);
        
    }

    private void updateTableSections() {
        //updates the sections table
        DefaultTableModel tModel = new DefaultTableModel();
        Object[] columnsName = new Object[3];

        columnsName[0] = "Section";
        columnsName[1] = "Year Level";
        columnsName[2] = "Course";

        tModel.setColumnIdentifiers(columnsName);

        Object[] rowData = new Object[3];

        for (int i = 0; i < getSections().size(); i++) {
            rowData[0] = getSections().get(i).getSectionName();
            rowData[1] = getSections().get(i).getYrLevel();
            rowData[2] = getSections().get(i).getCourse();

            tModel.addRow(rowData);
        }
        jTableSection.setModel(tModel);
    }

    private void updateTableSubjects() {
        //updates the subjects table
        DefaultTableModel tModel = new DefaultTableModel();
        Object[] columnsName = new Object[4];

        columnsName[0] = "Subject ID";
        columnsName[1] = "Subject Name";
        columnsName[2] = "Type";
        columnsName[3] = "Course";

        tModel.setColumnIdentifiers(columnsName);

        Object[] rowData = new Object[4];

        for (int i = 0; i < getSubjects().size(); i++) {
            rowData[0] = getSubjects().get(i).getSubID();
            rowData[1] = getSubjects().get(i).getSubName();
            rowData[2] = getSubjects().get(i).getSubType();
            rowData[3] = getSubjects().get(i).getCourseID();

            tModel.addRow(rowData);
        }
        jTableSubjects.setModel(tModel);
    }

    public void updateComboBox(JComboBox comboBox, String query, String colName) {
        //updtes the comboboxes that is returned
        comboBox.removeAllItems();
        Connection con = DBConnection.getConnection();
        try {
            PreparedStatement ps = con.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            while (rs.next()) {
                comboBox.addItem(rs.getString(colName));
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CourseManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CourseManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CourseManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CourseManagement.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CourseManagement().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonAddCourse;
    private javax.swing.JButton jButtonAddSec;
    private javax.swing.JButton jButtonAddSub;
    private javax.swing.JButton jButtonBackBtn;
    private javax.swing.JButton jButtonDeleteCourse;
    private javax.swing.JButton jButtonDeleteSec;
    private javax.swing.JButton jButtonDeleteSub;
    private javax.swing.JComboBox<String> jComboBoxCourse;
    private javax.swing.JComboBox<String> jComboBoxCourseSub;
    private javax.swing.JComboBox<String> jComboBoxSubType;
    private javax.swing.JComboBox<String> jComboBoxYrLevel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableCourse;
    private javax.swing.JTable jTableSection;
    private javax.swing.JTable jTableSubjects;
    private javax.swing.JTextField jTextFieldAddSec;
    private javax.swing.JTextField jTextFieldCourseID;
    private javax.swing.JTextField jTextFieldCourseName;
    private javax.swing.JTextField jTextFieldSubID;
    private javax.swing.JTextField jTextFieldSubName;
    // End of variables declaration//GEN-END:variables
}
